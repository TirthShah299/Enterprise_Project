# Server Configuration
server.port=0
spring.application.name=order-service

# Application Information
info.app.name="order-service"
info.app.description="Order Service Application"
info.app.version="1.0.0"

# Eureka Client Configuration
eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.region=default
eureka.client.service-url.defaultZone=http://eureka-service:8761/eureka/
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.instance-id=order-service:${spring.application.instance_id:${random.value}}
eureka.client.registry-fetch-interval-seconds=5

# Management Endpoints Configuration
management.endpoints.web.exposure.include=info,health,shutdown
management.endpoint.shutdown.enabled=true
management.info.env.enabled=true

# MongoDB Configuration
spring.data.mongodb.uri=mongodb+srv://shahtirth415:mongoDB@cluster0.t1vhrxf.mongodb.net/enterprise

# Disable DataSource Auto-Configuration
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

#Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=com.group5.ordersservice.service.OrderPlacedEventSerializer

